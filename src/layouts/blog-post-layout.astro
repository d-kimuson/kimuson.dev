---
import { buildInternalArticleDetail } from "../domain-object/article/internal-article-detail"
import { fullUrl } from "../domain-object/article/internal-article"
import { validateBlogProps } from "../features/blog/service/validate-props"
import { Header } from "../features/layout/header"
import { Footer } from "../features/layout/footer"
import { BlogPreviewPage } from "../features/blog/pages/blog-preview-page"
import { headerHeight, contentMinHeightStyle, px } from '../features/layout/config'
import { siteConfig } from "~/config/site"

const { url, headings } = validateBlogProps(Astro.props)
const articleDetail = buildInternalArticleDetail(
  Astro.props.frontmatter,
  url,
  headings
)
const articleFullUrl = fullUrl(articleDetail)

const summaryContent = (): string | undefined => {
  const rawContent: string = Astro.props.rawContent()
  
  const firstSentence = rawContent.split('\n')
    .filter((content: string) => content !== '')
    .at(0)

  return firstSentence === undefined ? undefined : firstSentence + '...'
}

const maybeDescription = articleDetail.description === undefined || articleDetail.description === "まだ書かれていません"
  ? summaryContent()
  : articleDetail.description

console.log(`Page: ${articleDetail.title} (${url})`)
console.log("frontmatter", articleDetail)
---

<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{articleDetail.title}</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-okaidia.min.css" integrity="sha512-mIs9kKbaw6JZFfSuo+MovjU+Ntggfoj8RwAmJbVXQ5mkAX5LlgETQEweFPI18humSPHymTb5iikEOKWF7I8ncQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <!-- OGP -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="og:title" content={articleDetail.title} />
    <meta property="og:url" content={articleFullUrl} />
    <!-- そのうち対応したい -->
    <!-- <meta property="og:image" content="" /> -->
    <meta property="og:type" content="article" />
    <meta property="og:site_name" content={siteConfig.siteName} />
    {maybeDescription !== undefined ? <meta property="og:description" content={maybeDescription} /> : null}
  <body>
    <div style={{ paddingBlockStart: px(headerHeight), isolation: 'isolate' }}>
      <Header />
      <div class="content" style={{ minHeight: contentMinHeightStyle, isolation: 'isolate' }}>
        <BlogPreviewPage client:load articleDetail={articleDetail}>
          <slot />
        </BlogPreviewPage>
      </div>
      <Footer />
    </div>
  </body>
</html>

<style is:global lang="scss">
  @use "sass:color";
  :root {
    --accent: 124, 58, 237;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      #da62c4 30%,
      white 60%
    );
  }
  html {
    font-family: system-ui, sans-serif;
    background-color: #f6f6f6;
  }
  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
      DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
  }

  body {
    background: #333846
  }

  .content {
    * {
      scroll-margin-top: 60px;
    }
  }

  // article
  $-code-title-height: 35px;

  .remark-code-title {
    position: relative;
    top: $-code-title-height + 8px;
    left: 20px;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    border-radius: 0 0 5px 5px;
    background: #21242d;
    padding-inline: 10px;
    height: $-code-title-height;
  }

  .remark-code-title + pre[class*="language-"] {
    padding-top: $-code-title-height + 5px;
  }

  .m-md-style {
    h2 {
      font-size: 1.5rem;
      line-height: 2rem;
      padding: 1rem 0.5rem;
      margin: 1.8rem 0;
      border-block-end: solid 2px #fafafa;
    }
    h3 {
      font-size: 1.3rem;
      line-height: 1.8rem;
      margin: 1.5rem 0;
      padding: 0.5rem 0 0.5rem 0.8rem;
      border-inline-start: solid 8px #171920;
    }
    h4 {
      font-size: 1.3rem;
      line-height: 1.8rem;
      margin: 1.2rem 0;
    }
    a {
      color: #00b0ff;
      position: relative;
      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 0%;
        background-color: #00b0ff;
        opacity: 0.2;
        transition: 0.2s;
      }
      &:hover {
        &::before {
          width: 100%;
        }
      }
    }
    p {
      font-size: 1rem;
      line-height: 2.2rem;
      margin: 15px 0;
    }
    img,
    ul,
    ol,
    table,
    blockquote {
      margin: 25px 5px;
    }
    ul {
      list-style: inside;
      & > li {
        margin: 5px 25px;
      }
    }
    ol {
      & > li {
        margin: 5px 0;
      }
    }

    ul,
    ol {
      li {
        & > p,
        ul,
        ol {
          line-height: 1.5;
          margin: 0;
        }
      }
    }
    table {
      border-collapse: collapse;
      box-shadow: 0 0 8px 1px #333846;
      th,
      td {
        border: solid 1px #fafafa;
        padding: 0.5rem 1rem;
        font-weight: 400;
      }
      th {
        background-color: #171920;
        color: #fafafa;
      }
    }
    img[src*="gif"] {
      filter: none;
    }
    blockquote {
      $-quote-color: color.scale(#fafafa, $lightness: 50%);

      border-inline-start: solid 4px color.scale($-quote-color, $lightness: 45%);
      margin: 1rem 0;
      p {
        margin: 0 0 0 1.2rem;
        line-height: 2rem;
        color: $-quote-color;
      }
    }
    // for `example`
    // :not(pre) > code {
    //   background: var.$theme-color;
    //   height: 100%;
    //   font-size: 1rem;
    //   padding: 0.2rem 0.4rem;
    //   border-radius: 3px;
    // }
    hr {
      display: block;
      background-color: #21242d;
      height: 2px;
      border: none;
      margin: 1.2rem 0;
    }
    .anchor {
      &,
      &:hover {
        display: none !important;
      }
    }
  }
</style>
